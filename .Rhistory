### First scenario: continuous in 1 dimension
##############################################
### assume that wintering area W is the interval [0,1]
#plotFsr1D(mro)
plotMsr(mro)
out <- simContin(mro)
eta <- out$eta
k <- out$k
res_x <- 100
kde_all <- estKDE(eta, mro$numberOfBreedingAreas,mro$observationTime,res_x, all = TRUE)
mro$kde <- estKDE(eta,mro$numberOfBreedingAreas,mro$observationTime,res_x)
mro$kde[["all"]] <- kde_all[[1]]
#source("plotKDE.R")
plotKDE1D("all",res_x,mro)
for(b in 1:B){
plotKDE1D(b,res_x,mro)
}
s_fit <- estS(res_x,mro)
plotS(res_x,mro,s_fit,pdf = FALSE)
m_fit <- estM(res_x, mro,s_fit)
m_fit_all <- estM(res_x,mro,s_fit, all  = TRUE)
plotM(res_x,mro,m_fit)
plotM(B, res_x,f,f_fit_all)
lines(seq(0,1,length.out = 99),rowSums(mapply( "*",f_fit, n))/sum(n))
wd <- getwd()
setwd("..")
devtools::install("continuousSpatioTemporalMarkRecapture/")
library(continousSpatioTemporalMarkRecapture)
B <- 5     # number of breeding areas
res_x <- 100
mro <- markRecaptureObject(xrange = c(0,1),
survival = function(w){0.5*w+.4},
recovery = function(w){0.01},
markedInds = ceiling(runif(B,100000,100000)) ,
migratoryConnectivity = function(b,w){
truncnorm::dtruncnorm(w,0,1, mean = seq(0.1,0.9,length.out = B)[b], sd = 0.3)},
observationTime = 10)
mro2 <- markRecaptureObject(xrange = c(0,1),
yrange = c(0,1),
survival = function(w){-sum(0.25*w)+1},
recovery = function(w){0.01},
markedInds = ceiling(runif(B,10000,100000)) ,
migratoryConnectivity = function(b,w,lb=0,ub=1){
tmvtnorm::dtmvnorm(w, mean = rep(seq(0.1,0.9,length.out = B)[b],2),
sigma = diag(0.3,2), lower = rep(lb,2),
upper = rep(ub,2))
},
observationTime = 10)
##############################################
### First scenario: continuous in 1 dimension
##############################################
### assume that wintering area W is the interval [0,1]
#plotFsr1D(mro)
plotMsr(mro)
out <- simContin(mro)
eta <- out$eta
k <- out$k
res_x <- 100
kde_all <- estKDE(eta, mro$numberOfBreedingAreas,mro$observationTime,res_x, all = TRUE)
mro$kde <- estKDE(eta,mro$numberOfBreedingAreas,mro$observationTime,res_x)
mro$kde[["all"]] <- kde_all[[1]]
#source("plotKDE.R")
plotKDE1D("all",res_x,mro)
for(b in 1:B){
plotKDE1D(b,res_x,mro)
}
s_fit <- estS(res_x,mro)
plotS(res_x,mro,s_fit,pdf = FALSE)
m_fit <- estM(res_x, mro,s_fit)
m_fit_all <- estM(res_x,mro,s_fit, all  = TRUE)
plotM(res_x,mro,m_fit)
plotM(B, res_x,f,f_fit_all)
lines(seq(0,1,length.out = 99),rowSums(mapply( "*",f_fit, n))/sum(n))
setwd(wd)
devtools::document()
setwd("continuousSpatioTemporalMarkRecapture/")
devtools::document()
wd <- getwd()
setwd("..")
devtools::install("continuousSpatioTemporalMarkRecapture/")
library(continousSpatioTemporalMarkRecapture)
B <- 5     # number of breeding areas
res_x <- 100
mro <- markRecaptureObject(xrange = c(0,1),
survival = function(w){0.5*w+.4},
recovery = function(w){0.01},
markedInds = ceiling(runif(B,100000,100000)) ,
migratoryConnectivity = function(b,w){
truncnorm::dtruncnorm(w,0,1, mean = seq(0.1,0.9,length.out = B)[b], sd = 0.3)},
observationTime = 10)
mro2 <- markRecaptureObject(xrange = c(0,1),
yrange = c(0,1),
survival = function(w){-sum(0.25*w)+1},
recovery = function(w){0.01},
markedInds = ceiling(runif(B,10000,100000)) ,
migratoryConnectivity = function(b,w,lb=0,ub=1){
tmvtnorm::dtmvnorm(w, mean = rep(seq(0.1,0.9,length.out = B)[b],2),
sigma = diag(0.3,2), lower = rep(lb,2),
upper = rep(ub,2))
},
observationTime = 10)
##############################################
### First scenario: continuous in 1 dimension
##############################################
### assume that wintering area W is the interval [0,1]
#plotFsr1D(mro)
plotMsr(mro)
out <- simContin(mro)
eta <- out$eta
k <- out$k
res_x <- 100
kde_all <- estKDE(eta, mro$numberOfBreedingAreas,mro$observationTime,res_x, all = TRUE)
mro$kde <- estKDE(eta,mro$numberOfBreedingAreas,mro$observationTime,res_x)
mro$kde[["all"]] <- kde_all[[1]]
#source("plotKDE.R")
plotKDE1D("all",res_x,mro)
for(b in 1:B){
plotKDE1D(b,res_x,mro)
}
s_fit <- estS(res_x,mro)
plotS(res_x,mro,s_fit,pdf = FALSE)
m_fit <- estM(res_x, mro,s_fit)
m_fit_all <- estM(res_x,mro,s_fit, all  = TRUE)
plotM(res_x,mro,m_fit)
plotM(B, res_x,f,f_fit_all)
lines(seq(0,1,length.out = 99),rowSums(mapply( "*",f_fit, n))/sum(n))
plotM(res_x,mro,m_fit)
devtools::install("continuousSpatioTemporalMarkRecapture/")
library(continousSpatioTemporalMarkRecapture)
B <- 5     # number of breeding areas
res_x <- 100
mro <- markRecaptureObject(xrange = c(0,1),
survival = function(w){0.5*w+.4},
recovery = function(w){0.01},
markedInds = ceiling(runif(B,100000,100000)) ,
migratoryConnectivity = function(b,w){
truncnorm::dtruncnorm(w,0,1, mean = seq(0.1,0.9,length.out = B)[b], sd = 0.3)},
observationTime = 10)
mro2 <- markRecaptureObject(xrange = c(0,1),
yrange = c(0,1),
survival = function(w){-sum(0.25*w)+1},
recovery = function(w){0.01},
markedInds = ceiling(runif(B,10000,100000)) ,
migratoryConnectivity = function(b,w,lb=0,ub=1){
tmvtnorm::dtmvnorm(w, mean = rep(seq(0.1,0.9,length.out = B)[b],2),
sigma = diag(0.3,2), lower = rep(lb,2),
upper = rep(ub,2))
},
observationTime = 10)
##############################################
### First scenario: continuous in 1 dimension
##############################################
### assume that wintering area W is the interval [0,1]
#plotFsr1D(mro)
plotMsr(mro)
out <- simContin(mro)
eta <- out$eta
k <- out$k
res_x <- 100
kde_all <- estKDE(eta, mro$numberOfBreedingAreas,mro$observationTime,res_x, all = TRUE)
mro$kde <- estKDE(eta,mro$numberOfBreedingAreas,mro$observationTime,res_x)
mro$kde[["all"]] <- kde_all[[1]]
#source("plotKDE.R")
plotKDE1D("all",res_x,mro)
for(b in 1:B){
plotKDE1D(b,res_x,mro)
}
s_fit <- estS(res_x,mro)
plotS(res_x,mro,s_fit,pdf = FALSE)
m_fit <- estM(res_x, mro,s_fit)
m_fit_all <- estM(res_x,mro,s_fit, all  = TRUE)
plotM(res_x,mro,m_fit)
plotM(B, res_x,f,f_fit_all)
lines(seq(0,1,length.out = 99),rowSums(mapply( "*",f_fit, n))/sum(n))
curve(mro$breedingAreas[[1]]$migratoryConnectivity(x),0,1)
m_fit
plot(1:100,m_fit[[1]])
plot(seq(0,1,length.out = 100),m_fit[[1]])
devtools::install("continuousSpatioTemporalMarkRecapture/")
library(continousSpatioTemporalMarkRecapture)
B <- 5     # number of breeding areas
res_x <- 100
mro <- markRecaptureObject(xrange = c(0,1),
survival = function(w){0.5*w+.4},
recovery = function(w){0.01},
markedInds = ceiling(runif(B,100000,100000)) ,
migratoryConnectivity = function(b,w){
truncnorm::dtruncnorm(w,0,1, mean = seq(0.1,0.9,length.out = B)[b], sd = 0.3)},
observationTime = 10)
mro2 <- markRecaptureObject(xrange = c(0,1),
yrange = c(0,1),
survival = function(w){-sum(0.25*w)+1},
recovery = function(w){0.01},
markedInds = ceiling(runif(B,10000,100000)) ,
migratoryConnectivity = function(b,w,lb=0,ub=1){
tmvtnorm::dtmvnorm(w, mean = rep(seq(0.1,0.9,length.out = B)[b],2),
sigma = diag(0.3,2), lower = rep(lb,2),
upper = rep(ub,2))
},
observationTime = 10)
##############################################
### First scenario: continuous in 1 dimension
##############################################
### assume that wintering area W is the interval [0,1]
#plotFsr1D(mro)
plotMsr(mro)
out <- simContin(mro)
eta <- out$eta
k <- out$k
res_x <- 100
kde_all <- estKDE(eta, mro$numberOfBreedingAreas,mro$observationTime,res_x, all = TRUE)
mro$kde <- estKDE(eta,mro$numberOfBreedingAreas,mro$observationTime,res_x)
mro$kde[["all"]] <- kde_all[[1]]
#source("plotKDE.R")
plotKDE1D("all",res_x,mro)
for(b in 1:B){
plotKDE1D(b,res_x,mro)
}
s_fit <- estS(res_x,mro)
plotS(res_x,mro,s_fit,pdf = FALSE)
m_fit <- estM(res_x, mro,s_fit)
m_fit_all <- estM(res_x,mro,s_fit, all  = TRUE)
plotM(res_x,mro,m_fit)
plotM(B, res_x,f,f_fit_all)
lines(seq(0,1,length.out = 99),rowSums(mapply( "*",f_fit, n))/sum(n))
plotM(res_x,mro,m_fit_all)
devtools::install("continuousSpatioTemporalMarkRecapture/")
library(continousSpatioTemporalMarkRecapture)
B <- 5     # number of breeding areas
res_x <- 100
mro <- markRecaptureObject(xrange = c(0,1),
survival = function(w){0.5*w+.4},
recovery = function(w){0.01},
markedInds = ceiling(runif(B,100000,100000)) ,
migratoryConnectivity = function(b,w){
truncnorm::dtruncnorm(w,0,1, mean = seq(0.1,0.9,length.out = B)[b], sd = 0.3)},
observationTime = 10)
mro2 <- markRecaptureObject(xrange = c(0,1),
yrange = c(0,1),
survival = function(w){-sum(0.25*w)+1},
recovery = function(w){0.01},
markedInds = ceiling(runif(B,10000,100000)) ,
migratoryConnectivity = function(b,w,lb=0,ub=1){
tmvtnorm::dtmvnorm(w, mean = rep(seq(0.1,0.9,length.out = B)[b],2),
sigma = diag(0.3,2), lower = rep(lb,2),
upper = rep(ub,2))
},
observationTime = 10)
##############################################
### First scenario: continuous in 1 dimension
##############################################
### assume that wintering area W is the interval [0,1]
#plotFsr1D(mro)
plotMsr(mro)
out <- simContin(mro)
eta <- out$eta
k <- out$k
res_x <- 100
kde_all <- estKDE(eta, mro$numberOfBreedingAreas,mro$observationTime,res_x, all = TRUE)
mro$kde <- estKDE(eta,mro$numberOfBreedingAreas,mro$observationTime,res_x)
mro$kde[["all"]] <- kde_all[[1]]
#source("plotKDE.R")
plotKDE1D("all",res_x,mro)
for(b in 1:B){
plotKDE1D(b,res_x,mro)
}
s_fit <- estS(res_x,mro)
plotS(res_x,mro,s_fit,pdf = FALSE)
m_fit <- estM(res_x, mro,s_fit)
m_fit_all <- estM(res_x,mro,s_fit, all  = TRUE)
plotM(res_x,mro,m_fit)
plotM(res_x,mro,m_fit_all)
lines(seq(0,1,length.out = 99),rowSums(mapply( "*",f_fit, n))/sum(n))
plotM(res_x,mro,m_fit_all, all = TRUE)
lines(seq(0,1,length.out = 99),rowSums(mapply( "*",f_fit, n))/sum(n))
n <- mro$breedingAreas$all$markedInds
n <- sapply(mro$breedingAreas, function(x) x$markedInds)
n
n <- sapply(mro$breedingAreas, function(x) x$markedInds)[1:B]
lines(seq(0,1,length.out = 99),rowSums(mapply( "*",f_fit, n))/sum(n))
m_fit_all
plot(1:100, m_fit_all)
plot(1:100, m_fit_all[[1]])
plot(1:100, m_fit[[1]])
devtools::install("continuousSpatioTemporalMarkRecapture/")
library(continousSpatioTemporalMarkRecapture)
B <- 5     # number of breeding areas
res_x <- 100
mro <- markRecaptureObject(xrange = c(0,1),
survival = function(w){0.5*w+.4},
recovery = function(w){0.01},
markedInds = ceiling(runif(B,100000,100000)) ,
migratoryConnectivity = function(b,w){
truncnorm::dtruncnorm(w,0,1, mean = seq(0.1,0.9,length.out = B)[b], sd = 0.3)},
observationTime = 10)
mro2 <- markRecaptureObject(xrange = c(0,1),
yrange = c(0,1),
survival = function(w){-sum(0.25*w)+1},
recovery = function(w){0.01},
markedInds = ceiling(runif(B,10000,100000)) ,
migratoryConnectivity = function(b,w,lb=0,ub=1){
tmvtnorm::dtmvnorm(w, mean = rep(seq(0.1,0.9,length.out = B)[b],2),
sigma = diag(0.3,2), lower = rep(lb,2),
upper = rep(ub,2))
},
observationTime = 10)
##############################################
### First scenario: continuous in 1 dimension
##############################################
### assume that wintering area W is the interval [0,1]
#plotFsr1D(mro)
plotMsr(mro)
out <- simContin(mro)
eta <- out$eta
k <- out$k
res_x <- 100
kde_all <- estKDE(eta, mro$numberOfBreedingAreas,mro$observationTime,res_x, all = TRUE)
mro$kde <- estKDE(eta,mro$numberOfBreedingAreas,mro$observationTime,res_x)
mro$kde[["all"]] <- kde_all[[1]]
#source("plotKDE.R")
plotKDE1D("all",res_x,mro)
for(b in 1:B){
plotKDE1D(b,res_x,mro)
}
s_fit <- estS(res_x,mro)
plotS(res_x,mro,s_fit,pdf = FALSE)
m_fit <- estM(res_x, mro,s_fit)
m_fit_all <- estM(res_x,mro,s_fit, all  = TRUE)
plotM(res_x,mro,m_fit)
plotM(res_x,mro,m_fit_all, all = TRUE)
n <- sapply(mro$breedingAreas, function(x) x$markedInds)[1:B]
lines(seq(0,1,length.out = 99),rowSums(mapply( "*",f_fit, n))/sum(n))
kde <- markRecaptureObject$kde
val <- sapply(kde[["all"]]$z, function(l) mean(l[,i]))
sapply(kde[["all"]]$z, function(l) mean(l[,i]))
kde[["all"]]$z
devtools::install("continuousSpatioTemporalMarkRecapture/")
library(continousSpatioTemporalMarkRecapture)
B <- 5     # number of breeding areas
res_x <- 100
mro <- markRecaptureObject(xrange = c(0,1),
survival = function(w){0.5*w+.4},
recovery = function(w){0.01},
markedInds = ceiling(runif(B,100000,100000)) ,
migratoryConnectivity = function(b,w){
truncnorm::dtruncnorm(w,0,1, mean = seq(0.1,0.9,length.out = B)[b], sd = 0.3)},
observationTime = 10)
mro2 <- markRecaptureObject(xrange = c(0,1),
yrange = c(0,1),
survival = function(w){-sum(0.25*w)+1},
recovery = function(w){0.01},
markedInds = ceiling(runif(B,10000,100000)) ,
migratoryConnectivity = function(b,w,lb=0,ub=1){
tmvtnorm::dtmvnorm(w, mean = rep(seq(0.1,0.9,length.out = B)[b],2),
sigma = diag(0.3,2), lower = rep(lb,2),
upper = rep(ub,2))
},
observationTime = 10)
#plotFsr1D(mro)
plotMsr(mro)
out <- simContin(mro)
eta <- out$eta
k <- out$k
res_x <- 100
kde_all <- estKDE(eta, mro$numberOfBreedingAreas,mro$observationTime,res_x, all = TRUE)
mro$kde <- estKDE(eta,mro$numberOfBreedingAreas,mro$observationTime,res_x)
mro$kde[["all"]] <- kde_all[[1]]
#source("plotKDE.R")
plotKDE1D("all",res_x,mro)
for(b in 1:B){
plotKDE1D(b,res_x,mro)
}
s_fit <- estS(res_x,mro)
plotS(res_x,mro,s_fit,pdf = FALSE)
m_fit <- estM(res_x, mro,s_fit)
m_fit_all <- estM(res_x,mro,s_fit, all  = TRUE)
m_fit_all
m_fit
devtools::install("continuousSpatioTemporalMarkRecapture/")
library(continousSpatioTemporalMarkRecapture)
B <- 5     # number of breeding areas
res_x <- 100
mro <- markRecaptureObject(xrange = c(0,1),
survival = function(w){0.5*w+.4},
recovery = function(w){0.01},
markedInds = ceiling(runif(B,100000,100000)) ,
migratoryConnectivity = function(b,w){
truncnorm::dtruncnorm(w,0,1, mean = seq(0.1,0.9,length.out = B)[b], sd = 0.3)},
observationTime = 10)
mro2 <- markRecaptureObject(xrange = c(0,1),
yrange = c(0,1),
survival = function(w){-sum(0.25*w)+1},
recovery = function(w){0.01},
markedInds = ceiling(runif(B,10000,100000)) ,
migratoryConnectivity = function(b,w,lb=0,ub=1){
tmvtnorm::dtmvnorm(w, mean = rep(seq(0.1,0.9,length.out = B)[b],2),
sigma = diag(0.3,2), lower = rep(lb,2),
upper = rep(ub,2))
},
observationTime = 10)
#plotFsr1D(mro)
plotMsr(mro)
out <- simContin(mro)
eta <- out$eta
k <- out$k
res_x <- 100
kde_all <- estKDE(eta, mro$numberOfBreedingAreas,mro$observationTime,res_x, all = TRUE)
mro$kde <- estKDE(eta,mro$numberOfBreedingAreas,mro$observationTime,res_x)
mro$kde[["all"]] <- kde_all[[1]]
#source("plotKDE.R")
plotKDE1D("all",res_x,mro)
for(b in 1:B){
plotKDE1D(b,res_x,mro)
}
s_fit <- estS(res_x,mro)
plotS(res_x,mro,s_fit,pdf = FALSE)
m_fit <- estM(res_x, mro,s_fit)
m_fit_all <- estM(res_x,mro,s_fit, all  = TRUE)
plotM(res_x,mro,m_fit)
plotM(res_x,mro,m_fit_all, all = TRUE)
n <- sapply(mro$breedingAreas, function(x) x$markedInds)[1:B]
lines(seq(0,1,length.out = 99),rowSums(mapply( "*",f_fit, n))/sum(n))
markRecaptureObject$breedingAreas
devtools::install("continuousSpatioTemporalMarkRecapture/")
library(continousSpatioTemporalMarkRecapture)
B <- 5     # number of breeding areas
res_x <- 100
mro <- markRecaptureObject(xrange = c(0,1),
survival = function(w){0.5*w+.4},
recovery = function(w){0.01},
markedInds = ceiling(runif(B,100000,100000)) ,
migratoryConnectivity = function(b,w){
truncnorm::dtruncnorm(w,0,1, mean = seq(0.1,0.9,length.out = B)[b], sd = 0.3)},
observationTime = 10)
mro2 <- markRecaptureObject(xrange = c(0,1),
yrange = c(0,1),
survival = function(w){-sum(0.25*w)+1},
recovery = function(w){0.01},
markedInds = ceiling(runif(B,10000,100000)) ,
migratoryConnectivity = function(b,w,lb=0,ub=1){
tmvtnorm::dtmvnorm(w, mean = rep(seq(0.1,0.9,length.out = B)[b],2),
sigma = diag(0.3,2), lower = rep(lb,2),
upper = rep(ub,2))
},
observationTime = 10)
#plotFsr1D(mro)
plotMsr(mro)
out <- simContin(mro)
eta <- out$eta
k <- out$k
res_x <- 100
kde_all <- estKDE(eta, mro$numberOfBreedingAreas,mro$observationTime,res_x, all = TRUE)
mro$kde <- estKDE(eta,mro$numberOfBreedingAreas,mro$observationTime,res_x)
mro$kde[["all"]] <- kde_all[[1]]
#source("plotKDE.R")
plotKDE1D("all",res_x,mro)
for(b in 1:B){
plotKDE1D(b,res_x,mro)
}
s_fit <- estS(res_x,mro)
plotS(res_x,mro,s_fit,pdf = FALSE)
m_fit <- estM(res_x, mro,s_fit)
m_fit_all <- estM(res_x,mro,s_fit, all  = TRUE)
plotM(res_x,mro,m_fit)
plotM(res_x,mro,m_fit_all, all = TRUE)
n <- sapply(mro$breedingAreas, function(x) x$markedInds)[1:B]
plotM(res_x,mro,m_fit)
plotM(res_x,mro,m_fit_all, all = TRUE)
devtools::install("continuousSpatioTemporalMarkRecapture/")
library(continousSpatioTemporalMarkRecapture)
B <- 5     # number of breeding areas
res_x <- 100
mro <- markRecaptureObject(xrange = c(0,1),
survival = function(w){0.5*w+.4},
recovery = function(w){0.01},
markedInds = ceiling(runif(B,100000,100000)) ,
migratoryConnectivity = function(b,w){
truncnorm::dtruncnorm(w,0,1, mean = seq(0.1,0.9,length.out = B)[b], sd = 0.3)},
observationTime = 10)
mro2 <- markRecaptureObject(xrange = c(0,1),
yrange = c(0,1),
survival = function(w){-sum(0.25*w)+1},
recovery = function(w){0.01},
markedInds = ceiling(runif(B,10000,100000)) ,
migratoryConnectivity = function(b,w,lb=0,ub=1){
tmvtnorm::dtmvnorm(w, mean = rep(seq(0.1,0.9,length.out = B)[b],2),
sigma = diag(0.3,2), lower = rep(lb,2),
upper = rep(ub,2))
},
observationTime = 10)
#plotFsr1D(mro)
plotMsr(mro)
out <- simContin(mro)
eta <- out$eta
k <- out$k
res_x <- 100
kde_all <- estKDE(eta, mro$numberOfBreedingAreas,mro$observationTime,res_x, all = TRUE)
mro$kde <- estKDE(eta,mro$numberOfBreedingAreas,mro$observationTime,res_x)
mro$kde[["all"]] <- kde_all[[1]]
#source("plotKDE.R")
plotKDE1D("all",res_x,mro)
for(b in 1:B){
plotKDE1D(b,res_x,mro)
}
s_fit <- estS(res_x,mro)
plotS(res_x,mro,s_fit,pdf = FALSE)
m_fit <- estM(res_x, mro,s_fit)
m_fit_all <- estM(res_x,mro,s_fit, all  = TRUE)
plotM(res_x,mro,m_fit)
plotM(res_x,mro,m_fit_all, all = TRUE)
n <- sapply(mro$breedingAreas, function(x) x$markedInds)[1:B]
lines(seq(0,1,length.out = 99),rowSums(mapply( "*",f_fit, n))/sum(n))
