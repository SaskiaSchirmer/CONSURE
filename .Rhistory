?examples
getwd()
document()
devtools::document()
devtools::document()
devtools::document()
devtools::document()
devtools::document()
?spattemp.density
??spattemp.density
devtools::use_package("sparr")
devtools::document()
devtools::document()
devtools::use_package("sparr")
devtools::document()
devtools::document()
wd <- getwd()
setwd("..")
install("continousSpatioTemporalMarkRecapture/")
evtools::install("continousSpatioTemporalMarkRecapture/")
devtools::install("continousSpatioTemporalMarkRecapture/")
library(continousSpatioTemporalMarkRecapture)
B <- 5     # number of breeding areas
#f_mean <- 0.3
f_mean <- seq(0.1,0.9,length.out = B) # preparation to get different distributions per breeding area
f_sd <- 0.3
n <- ceiling(runif(B,100000,1000000))    # number of marked individuals in 1 breeding area
T <- 10         # observation time
res_x <- 100
### the breeding area specific distribution of individuals
### in the wintering area is a truncated normal as integral over W is 1
f <- function(b,w){dtruncnorm(w,0,1, mean = f_mean[b], sd = f_sd)}
### s is a linear function in w
s <- function(w){0.5*w+.4}
### r is a constant (for identifiability reasons)
r <- 0.01
# not seen
p_nf <- numeric()
for(b in 1:B){
p_nf[b] <- integrate(f = f_nf,lower = 0, upper = 1, b = b, s= s, m=f, r=r, T = T)$value
}
# not seen
p_nf <- numeric()
for(b in 1:B){
p_nf[b] <- integrate(f = f_nf_sub,lower = 0, upper = 1, b = b, s= s, m=f, r=r, T = T)$value
}
### the breeding area specific distribution of individuals
### in the wintering area is a truncated normal as integral over W is 1
f <- function(b,w){
truncnorm::dtruncnorm(w,0,1, mean = f_mean[b], sd = f_sd)}
for(b in 1:B){
p_nf[b] <- integrate(f = f_nf_sub,lower = 0, upper = 1, b = b, s= s, m=f, r=r, T = T)$value
}
out <- simContin(B,p_nf,f_f_sub,n)
setwd(wd)
usethis::use_package("truncdist")
setwd("..")
devtools::install("continousSpatioTemporalMarkRecapture/")
library(continousSpatioTemporalMarkRecapture)
B <- 5     # number of breeding areas
#f_mean <- 0.3
f_mean <- seq(0.1,0.9,length.out = B) # preparation to get different distributions per breeding area
f_sd <- 0.3
n <- ceiling(runif(B,100000,1000000))    # number of marked individuals in 1 breeding area
T <- 10         # observation time
res_x <- 100
### the breeding area specific distribution of individuals
### in the wintering area is a truncated normal as integral over W is 1
f <- function(b,w){
truncnorm::dtruncnorm(w,0,1, mean = f_mean[b], sd = f_sd)}
### s is a linear function in w
s <- function(w){0.5*w+.4}
### r is a constant (for identifiability reasons)
r <- 0.01
plotFsr(f,s,r,T)
# not seen
p_nf <- numeric()
for(b in 1:B){
p_nf[b] <- integrate(f = f_nf_sub,lower = 0, upper = 1, b = b, s= s, m=f, r=r, T = T)$value
}
out <- simContin(B,p_nf,f_f_sub,n)
setwd(wd)
devtools::document()
wd <- getwd()
setwd("..")
devtools::install("continousSpatioTemporalMarkRecapture/")
library(continousSpatioTemporalMarkRecapture)
B <- 5     # number of breeding areas
#f_mean <- 0.3
f_mean <- seq(0.1,0.9,length.out = B) # preparation to get different distributions per breeding area
f_sd <- 0.3
n <- ceiling(runif(B,100000,1000000))    # number of marked individuals in 1 breeding area
T <- 10         # observation time
res_x <- 100
### the breeding area specific distribution of individuals
### in the wintering area is a truncated normal as integral over W is 1
f <- function(b,w){
truncnorm::dtruncnorm(w,0,1, mean = f_mean[b], sd = f_sd)}
### s is a linear function in w
s <- function(w){0.5*w+.4}
### r is a constant (for identifiability reasons)
r <- 0.01
plotFsr(f,s,r,T)
# not seen
p_nf <- numeric()
for(b in 1:B){
p_nf[b] <- integrate(f = f_nf_sub,lower = 0, upper = 1, b = b, s= s, m=f, r=r, T = T)$value
}
out <- simContin(B,p_nf,f_f_sub,n)
devtools::install("continousSpatioTemporalMarkRecapture/")
library(continousSpatioTemporalMarkRecapture)
B <- 5     # number of breeding areas
#f_mean <- 0.3
f_mean <- seq(0.1,0.9,length.out = B) # preparation to get different distributions per breeding area
f_sd <- 0.3
n <- ceiling(runif(B,100000,1000000))    # number of marked individuals in 1 breeding area
T <- 10         # observation time
res_x <- 100
### the breeding area specific distribution of individuals
### in the wintering area is a truncated normal as integral over W is 1
f <- function(b,w){
truncnorm::dtruncnorm(w,0,1, mean = f_mean[b], sd = f_sd)}
### s is a linear function in w
s <- function(w){0.5*w+.4}
### r is a constant (for identifiability reasons)
r <- 0.01
plotFsr(f,s,r,T)
# not seen
p_nf <- numeric()
for(b in 1:B){
p_nf[b] <- integrate(f = f_nf_sub,lower = 0, upper = 1, b = b, s= s, m=f, r=r, T = T)$value
}
out <- simContin(B,p_nf,f_f_sub,n,s,m,r,T,f_f_sub, f_nf_sub)
simContin(B,
p_nf,
f_f,
n,
lb, ub, s,m,r,T,f_f_sub, f_nf_sub)
simContin(B,
p_nf,
f_f,
n,
lb, ub, s,m=f,r,T,f_f_sub, f_nf_sub)
simContin(B,
p_nf,
f_f,
n,
lb=0, ub=1, s,m=f,r,T,f_f_sub, f_nf_sub)
devtools::install("continousSpatioTemporalMarkRecapture/")
library(continousSpatioTemporalMarkRecapture)
B <- 5     # number of breeding areas
#f_mean <- 0.3
f_mean <- seq(0.1,0.9,length.out = B) # preparation to get different distributions per breeding area
f_sd <- 0.3
n <- ceiling(runif(B,100000,1000000))    # number of marked individuals in 1 breeding area
T <- 10         # observation time
res_x <- 100
### the breeding area specific distribution of individuals
### in the wintering area is a truncated normal as integral over W is 1
f <- function(b,w){
truncnorm::dtruncnorm(w,0,1, mean = f_mean[b], sd = f_sd)}
### s is a linear function in w
s <- function(w){0.5*w+.4}
### r is a constant (for identifiability reasons)
r <- 0.01
plotFsr(f,s,r,T)
# not seen
p_nf <- numeric()
for(b in 1:B){
p_nf[b] <- integrate(f = f_nf_sub,lower = 0, upper = 1, b = b, s= s, m=f, r=r, T = T)$value
}
out <- simContin(B,p_nf,n,lb=0, ub=1, s,m=f,r,T)
wd <- getwd()
setwd("..")
devtools::install("continousSpatioTemporalMarkRecapture/")
library(continousSpatioTemporalMarkRecapture)
B <- 5     # number of breeding areas
getwd()
setwd("continuousModel/")
devtools::install("continousSpatioTemporalMarkRecapture/")
library(continousSpatioTemporalMarkRecapture)
B <- 5     # number of breeding areas
#f_mean <- 0.3
f_mean <- seq(0.1,0.9,length.out = B) # preparation to get different distributions per breeding area
f_sd <- 0.3
n <- ceiling(runif(B,100000,1000000))    # number of marked individuals in 1 breeding area
T <- 10         # observation time
res_x <- 100
### the breeding area specific distribution of individuals
### in the wintering area is a truncated normal as integral over W is 1
f <- function(b,w){
truncnorm::dtruncnorm(w,0,1, mean = f_mean[b], sd = f_sd)}
### s is a linear function in w
s <- function(w){0.5*w+.4}
### r is a constant (for identifiability reasons)
r <- 0.01
plotFsr(f,s,r,T)
# not seen
p_nf <- numeric()
for(b in 1:B){
p_nf[b] <- integrate(f = f_nf_sub,lower = 0, upper = 1, b = b, s= s, m=f, r=r, T = T)$value
}
out <- simContin(B,p_nf,n,lb=0, ub=1, s,m=f,r,T)
eta <- out$eta
k <- out$k
k
usethis::use_package("SimDesign")
devtools::install("continousSpatioTemporalMarkRecapture/")
B <- 5     # number of breeding areas
#f_mean <- 0.3
f_mean <- seq(0.1,0.9,length.out = B) # preparation to get different distributions per breeding area
f_sd <- 0.3
n <- ceiling(runif(B,100000,1000000))    # number of marked individuals in 1 breeding area
T <- 10         # observation time
res_x <- 100
### the breeding area specific distribution of individuals
### in the wintering area is a truncated normal as integral over W is 1
f <- function(b,w){
truncnorm::dtruncnorm(w,0,1, mean = f_mean[b], sd = f_sd)}
### s is a linear function in w
s <- function(w){0.5*w+.4}
### r is a constant (for identifiability reasons)
r <- 0.01
# not seen
p_nf <- numeric()
for(b in 1:B){
p_nf[b] <- integrate(f = f_nf_sub,lower = 0, upper = 1, b = b, s= s, m=f, r=r, T = T)$value
}
out <- simContin(B,p_nf,n,lb=0, ub=1, s,m=f,r,T)
eta <- out$eta
k <- out$k
k
setwd("/home/saskia/Dokumente/DokumenteBuero/BiomatheHGW/PhD/projects/connectivity/RCode/continuousModel/")
setwd("continousSpatioTemporalMarkRecapture/")
devtools::document()
wd <- getwd()
setwd("..")
devtools::install("continousSpatioTemporalMarkRecapture/")
library(continousSpatioTemporalMarkRecapture)
B <- 5     # number of breeding areas
#f_mean <- 0.3
f_mean <- seq(0.1,0.9,length.out = B) # preparation to get different distributions per breeding area
f_sd <- 0.3
n <- ceiling(runif(B,100000,1000000))    # number of marked individuals in 1 breeding area
T <- 10         # observation time
res_x <- 100
### the breeding area specific distribution of individuals
### in the wintering area is a truncated normal as integral over W is 1
f <- function(b,w){
truncnorm::dtruncnorm(w,0,1, mean = f_mean[b], sd = f_sd)}
### s is a linear function in w
s <- function(w){0.5*w+.4}
### r is a constant (for identifiability reasons)
r <- 0.01
plotFsr(f,s,r,T)
# not seen
p_nf <- numeric()
for(b in 1:B){
p_nf[b] <- integrate(f = f_nf_sub,lower = 0, upper = 1, b = b, s= s, m=f, r=r, T = T)$value
}
out <- simContin(B,p_nf,n,lb=0, ub=1, s,m=f,r,T)
eta <- out$eta
k <- out$k
kde_all <- estKDE(eta,res_x,all= TRUE)
devtools::install("continousSpatioTemporalMarkRecapture/")
library(continousSpatioTemporalMarkRecapture)
B <- 5     # number of breeding areas
#f_mean <- 0.3
f_mean <- seq(0.1,0.9,length.out = B) # preparation to get different distributions per breeding area
f_sd <- 0.3
n <- ceiling(runif(B,100000,1000000))    # number of marked individuals in 1 breeding area
T <- 10         # observation time
res_x <- 100
### the breeding area specific distribution of individuals
### in the wintering area is a truncated normal as integral over W is 1
f <- function(b,w){
truncnorm::dtruncnorm(w,0,1, mean = f_mean[b], sd = f_sd)}
### s is a linear function in w
s <- function(w){0.5*w+.4}
### r is a constant (for identifiability reasons)
r <- 0.01
plotFsr(f,s,r,T)
# not seen
p_nf <- numeric()
for(b in 1:B){
p_nf[b] <- integrate(f = f_nf_sub,lower = 0, upper = 1, b = b, s= s, m=f, r=r, T = T)$value
}
out <- simContin(B,p_nf,n,lb=0, ub=1, s,m=f,r,T)
eta <- out$eta
k <- out$k
kde_all <- estKDE(eta,res_x,all= TRUE)
devtools::install("continousSpatioTemporalMarkRecapture/")
library(continousSpatioTemporalMarkRecapture)
B <- 5     # number of breeding areas
#f_mean <- 0.3
f_mean <- seq(0.1,0.9,length.out = B) # preparation to get different distributions per breeding area
f_sd <- 0.3
n <- ceiling(runif(B,100000,1000000))    # number of marked individuals in 1 breeding area
T <- 10         # observation time
res_x <- 100
### the breeding area specific distribution of individuals
### in the wintering area is a truncated normal as integral over W is 1
f <- function(b,w){
truncnorm::dtruncnorm(w,0,1, mean = f_mean[b], sd = f_sd)}
### s is a linear function in w
s <- function(w){0.5*w+.4}
### r is a constant (for identifiability reasons)
r <- 0.01
plotFsr(f,s,r,T)
# not seen
p_nf <- numeric()
for(b in 1:B){
p_nf[b] <- integrate(f = f_nf_sub,lower = 0, upper = 1, b = b, s= s, m=f, r=r, T = T)$value
}
out <- simContin(B,p_nf,n,lb=0, ub=1, s,m=f,r,T)
eta <- out$eta
k <- out$k
kde_all <- estKDE(eta,res_x,all= TRUE)
devtools::install("continousSpatioTemporalMarkRecapture/")
library(continousSpatioTemporalMarkRecapture)
B <- 5     # number of breeding areas
#f_mean <- 0.3
f_mean <- seq(0.1,0.9,length.out = B) # preparation to get different distributions per breeding area
f_sd <- 0.3
n <- ceiling(runif(B,100000,1000000))    # number of marked individuals in 1 breeding area
T <- 10         # observation time
res_x <- 100
### the breeding area specific distribution of individuals
### in the wintering area is a truncated normal as integral over W is 1
f <- function(b,w){
truncnorm::dtruncnorm(w,0,1, mean = f_mean[b], sd = f_sd)}
### s is a linear function in w
s <- function(w){0.5*w+.4}
### r is a constant (for identifiability reasons)
r <- 0.01
plotFsr(f,s,r,T)
# not seen
p_nf <- numeric()
for(b in 1:B){
p_nf[b] <- integrate(f = f_nf_sub,lower = 0, upper = 1, b = b, s= s, m=f, r=r, T = T)$value
}
out <- simContin(B,p_nf,n,lb=0, ub=1, s,m=f,r,T)
eta <- out$eta
k <- out$k
kde_all <- estKDE(eta,res_x,all= TRUE)
res_x <- 100
kde_all <- estKDE(eta,res_x,all= TRUE)
kde_all <- estKDE(eta,res_x=res_x,all= TRUE)
kde_all <- estKDE(eta, B, res_x, all = TRUE)
B
res_x
eta
kde_all <- estKDE(eta, B, res_x=res_x, all = TRUE)
devtools::install("continousSpatioTemporalMarkRecapture/")
library(continousSpatioTemporalMarkRecapture)
B <- 5     # number of breeding areas
#f_mean <- 0.3
f_mean <- seq(0.1,0.9,length.out = B) # preparation to get different distributions per breeding area
f_sd <- 0.3
n <- ceiling(runif(B,100000,1000000))    # number of marked individuals in 1 breeding area
T <- 10         # observation time
res_x <- 100
### the breeding area specific distribution of individuals
### in the wintering area is a truncated normal as integral over W is 1
f <- function(b,w){
truncnorm::dtruncnorm(w,0,1, mean = f_mean[b], sd = f_sd)}
### s is a linear function in w
s <- function(w){0.5*w+.4}
### r is a constant (for identifiability reasons)
r <- 0.01
plotFsr(f,s,r,T)
# not seen
p_nf <- numeric()
for(b in 1:B){
p_nf[b] <- integrate(f = f_nf_sub,lower = 0, upper = 1, b = b, s= s, m=f, r=r, T = T)$value
}
out <- simContin(B,p_nf,n,lb=0, ub=1, s,m=f,r,T)
eta <- out$eta
k <- out$k
res_x <- 100
kde_all <- estKDE(eta, B,T,res_x, all = TRUE)
kde_all
kde <- estKDE(eta,res_x)
kde <- estKDE(eta,B,T,res_x)
