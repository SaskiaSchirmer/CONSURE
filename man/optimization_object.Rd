% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/constructors.R
\name{optimization_object}
\alias{optimization_object}
\title{helper function for optimization object}
\usage{
optimization_object(
  mark_recapture_object,
  init_beta = NULL,
  y = list(longitude = seq(mark_recapture_object$destination$window$xrange[1],
    mark_recapture_object$destination$window$xrange[2], length.out =
    mark_recapture_object$spatial_resolution), latitude = NULL),
  knots = list(longitude = seq(mark_recapture_object$destination$window$xrange[1],
    mark_recapture_object$destination$window$xrange[2], length.out = max(3,
    mark_recapture_object$spatial_resolution/10)), latitude = NULL),
  b,
  degree = 3,
  lambda = c(1e-04, 10),
  split,
  use_corrected_m = FALSE,
  prop = NULL
)
}
\arguments{
\item{mark_recapture_object}{object of class mark_recapture_object
(see mark_recapture_object())}

\item{init_beta}{initial values for the B-spline parameters}

\item{y}{helper sequence, list of longitude and latitude, latitude defaults
to NULL}

\item{knots}{list of latitude and longitude of knots values for B-spline
definition, latitude defaults to NULL}

\item{b}{character, name of breeding area to be optimized, for all breeding
areas use "all"}

\item{degree}{degree of B-spline}

\item{lambda}{numeric vector of 2, weights for the discrete and the
smoothness constraint}

\item{split}{split of the discrete non-breeding areas}

\item{use_corrected_m}{logical, defaults to FALSE. Specifies, if the
penalizing function is calculated with the m already corrected for survival
and recovery probability. Commonly used for estimating combined migratory
connectivity for each breeding area.}

\item{prop}{defaults to NULL. Proportions for migratory connectivity in
discrete space defined by split. Must be specified if they cannot be
calculated from the true continuous migratory connectivity function.}
}
\value{
object of class "optimization_object": contains list of penalization
function, raw_spline and opt_beta.
}
\description{
This function defines the properties of an optimization object.
}
\examples{
{
 oO <- optimization_object(mark_recapture_object = mro1D_increasing$mro,
     b = "all",
     split = mro1D_increasing$split,
     lambda  = c(.05,300))
}
}
