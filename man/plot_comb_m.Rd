% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/plot_comb_m.R
\name{plot_comb_m}
\alias{plot_comb_m}
\title{Plot function for true and estimated continuous, discrete and combined
migratory connectivity}
\usage{
plot_comb_m(
  mark_recapture_object,
  optimization_object,
  pdf = FALSE,
  file_name = paste("m_comb_", Sys.time(), ".pdf", sep = ""),
  true_continuous = TRUE,
  true_discrete = TRUE,
  est_continuous = TRUE,
  est_discrete = FALSE,
  est_combined = TRUE,
  est_corrected = FALSE,
  zlim = NULL,
  draw_boundaries = FALSE,
  true_values_available = FALSE,
  uq = 1
)
}
\arguments{
\item{mark_recapture_object}{object of class mark_recapture_object}

\item{optimization_object}{object of class optimization_object}

\item{pdf}{logical, plot as pdf?, defaults to FALSE}

\item{file_name}{character string, only if pdf is TRUE, defaults to current
time}

\item{true_continuous}{logical, plot true continuous migratory connectivity}

\item{true_discrete}{logical, plot true discrete migratory connectivity}

\item{est_continuous}{logical, plot estimated continuous migratory
connectivity}

\item{est_discrete}{logical, plot estimated discrete migratory connectivity}

\item{est_combined}{logical, plot estimated combined migratory connectivity}

\item{est_corrected}{logical, plot estimated corrected mgiratory connectivity,
defaults to FALSE}

\item{zlim}{limits for migratory connectivity}

\item{draw_boundaries}{logical, specifies if the boundaries of the world map
should be drawn, defaults to FALSE}

\item{true_values_available}{logical, use TRUE for simulated data, FALSE for
real-world data. Defaults to FALSE.}

\item{uq}{upper quantile, similar to zlim?}
}
\description{
This function plots (in 1D) combinations of true and estimated migratory
connectivity values. It is possible to chose between continuous, discrete
and combined estimates.
}
\examples{
{
    o_o <- optimization_object(mark_recapture_object = mro1D_increasing$mro,
        b = "all",
        split = mro1D_increasing$split,
        lambda  = c(.05, 300))

    plotCombM(mro1D_increasing$mro, o_o)
}
}
