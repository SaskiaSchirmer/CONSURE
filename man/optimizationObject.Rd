% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/constructors.R
\name{optimizationObject}
\alias{optimizationObject}
\title{helper function for optimization object}
\usage{
optimizationObject(
  markRecaptureObject,
  initBeta = NULL,
  y = list(longitude = seq(0, 1, length.out = markRecaptureObject$spatialResolution),
    latitude = NULL),
  knots = list(longitude = seq(0, 1, length.out = max(3,
    markRecaptureObject$spatialResolution/10)), latitude = NULL),
  b,
  degree = 3,
  lambda = c(1e-04, 10),
  split,
  useCorrectedM = FALSE,
  prop = NULL
)
}
\arguments{
\item{markRecaptureObject}{object of class markRecaptureObject
(see markRecaptureObject())}

\item{initBeta}{initial values for the B-spline parameters}

\item{y}{helper sequence, list of longitude and latitude, latitude defaults to NULL}

\item{knots}{list of latitude and longitude of knots values for B-spline definition,
latitude defaults to NULL}

\item{b}{character, name of breeding area to be optimized, for all breeding areas use "all"}

\item{degree}{degree of B-spline}

\item{lambda}{numeric vector of 2, weights for the discrete and the smoothness constraint}

\item{split}{split of the discrete non-breeding areas}

\item{useCorrectedM}{logical, defaults to FALSE. Specifies, if the penalizing function
 is calculated with the m already corrected for survival and recovery probability. Commonly used for estimating combined migratory connectivity for each
breeding area.}

\item{prop}{defaults to NULL. Proportions for migratory connectivity in discrete space
 defined by split.
Must be specified if they cannot be calculated from the true continuous migratory connectivity
function.}
}
\value{
object of class "optimizationObject": contains list of penalization function,
rawSpline and optBeta.
}
\description{
This function defines the properties of an optimization object.
}
\examples{
{
 oO <- optimizationObject(markRecaptureObject = mro1DIncreasing$mro,
     b = "all",
     split = mro1DIncreasing$split,
     lambda  = c(.05,300))
}
}
